@page "/tickets"

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation
@using System.Text.Json
@using CST.Demo.Ticketing.Dtos

<style>
    .ticket-list-item {
        display: grid;
        grid-template-columns: 40px auto 15%;
        grid-template-areas: "id title state";
        column-gap: 5px;
    }

    .ticket-list-item-id {
        grid-area: id;
        justify-self: right;
    }

    .ticket-list-item-title {
        grid-area: title;
        justify-self: left;
        
    }

    .ticket-list-item-state {
        grid-area: state;
        justify-self: center;
    }
</style>

<h3>Tickets</h3>

<ul class="list-group">
    @foreach (var ticket in _tickets)
    {
        <div class="list-group-item list-group-item-action ticket-list-item" 
            @onclick="(() => OnClick(ticket.Id))">
            <div class="ticket-list-item-id">
                @ticket.Id
            </div>
            <div class="ticket-list-item-title">
                @ticket.Title
            </div>
            <div class="ticket-list-item-state">
                @ticket.State
            </div>
        </div>
    }
</ul>

@code {
    private ICollection<TicketListDto> _tickets = new List<TicketListDto>();

    public void OnClick(int id)
    {
        Navigation.NavigateTo($"/ticket/{id}");
    }

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientFactory.CreateClient(Constants.TicketingHttpClientName);
        var ticketResponse = await client.GetAsync("ticketing/");
        if (!ticketResponse.IsSuccessStatusCode)
        {
            return;
        }

        var contentString = await ticketResponse.Content.ReadAsStringAsync();
        _tickets = JsonSerializer.Deserialize<List<TicketListDto>>(contentString);
    }
}
