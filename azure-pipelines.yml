# ASP.NET Core (.NET Framework)

# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  batch: true
  branches:
    include:
      - develop
      - features/*
    exclude:
      - master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  major: '0'
  minor: '1'
  Continue: false
  nugetVersion: ''

steps:
- task: PowerShell@2
  displayName: 'Prerun'
  continueOnError: false
  inputs:
    targetType: inline
    script: |
      function setVarAndLog ($var, $val) {
        Write-Host "setting $var to $val";
        Write-Host "##vso[task.setvariable variable=$var]$val";
      }

      $diffs = $(git diff --name-only) | ? { $_ -like "src/*" };
      $continue = if ($diffs) {$true} else {$false}
      setVarAndLog "nugetVersion" "$(major).$(minor).$(Build.BuildId)-CI-$(Build.BuildNumber)"
      switch -exact ('$(Build.Reason)') {
        "Manual" {
          setVarAndLog "Continue" true
          Break;
        }
        { ("IndividualCI", "BatchedCI", "PullRequest") -contains $_ } {
          setVarAndLog "Continue" $continue
          Break;
        }
        Default {
          setVarAndLog "Continue" false
          Break;
        }
      }

- task: NuGetToolInstaller@1
  condition: eq(variables['Continue'], true)

- task: DotNetCoreCLI@2
  condition: eq(variables['Continue'], true)
  displayName: 'Build all projects'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: "--configuration $(buildConfiguration)"

- task: DotNetCoreCLI@2
  condition: eq(variables['Continue'], true)
  displayName: 'Pack all projects into nuget'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'nugetVersion'

- task: DotNetCoreCLI@2
  condition: eq(variables['Continue'], true)
  displayName: 'Push packages to libs feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '6c464a6a-95af-4d6c-b50e-c2008380278b'
